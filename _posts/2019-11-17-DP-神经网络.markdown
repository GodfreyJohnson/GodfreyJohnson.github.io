---
layout: post
title: 神经网络
date: 2019-11-17 19:00:24.000000000 +08:00
categories: [deep learning, ML, 神经网络]
---

原文：深度学习入门-第3章-神经网络

源码：https://github.com/oreilly-japan/deep-learning-from-scratch

# 手写数字识别案例

通过将手写数字图片进行分类的案例，对深度学习进行更深层次的了解。

目标：对6W张图片进行训练，将其进行0-9的分类，再通过1W的测试数据进行测试。

基础知识：图片是由像素为基本单位组成，像素是由RGB，3种颜色，（256，256，256）来进行表示。

## 数据集准备

通过mnist.py对数据集进行下载：**load_mnist(normalize=True, flatten=True, one_hot_label=False)**。
- normalize：将数据限定在某个范围内，对输入图像进行归一化(0.0-1.0)，如图像像素原本为0-255，再除以255后，则对其进行归一化。
- flatten：将数据扁平化，多二维降为一维。
- one_hot_label：设置为True时，只用1表示正确解标签，其余为0；设置为False，则用原值(0-9)保存正确解标签。

使用到的技术：
- pickle：序列化后进行持久化，将程序运行中的对象保存为文件，方便下次直接进行读取，不需要重复下载。
- pillow：图像处理标准库，功能强大，API简单。

所用的输入图片大小为28 * 28 = 784，输出为0-9共10个数字。中间的神经网络有2个隐藏层，第一层有50个神经元，第二个有100个神经元。

批处理：同时将100张图片进行处理，（100，784）* （784，50）*（50，100）* (100，10) = （100，10）。批处理的好处是由数值计算的库带来的，因为其中已经对大型数组的运算进行了优化
- range：指定批处理范围，range(0, len(x), batch_size)
- argmax：获取值最大的元素的索引





